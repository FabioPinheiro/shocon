# This is an unmodified akka-reference.conf, except for this
# comment and quoting one key that contained slashes.
# Note: the outer akka{} would not be used in the usual setup
# with this config lib.

##############################
# Akka Reference Config File #
##############################

# This the reference config file has all the default settings.
# All these could be removed with no visible effect.
# Modify as needed.
# This file is imported in the 'akka.conf' file. Make your edits/overrides there.

akka {
  version = "2.0-SNAPSHOT" # Akka version, checked against the runtime version of Akka.

  enabled-modules = []     # Comma separated list of the enabled modules. Options: ["cluster", "camel", "http"]

  time-unit = "seconds"    # Time unit for all timeout properties throughout the config

  event-handlers = ["akka.event.Logging$DefaultLogger"] # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
  loglevel        = "WARNING"                           # Options: ERROR, WARNING, INFO, DEBUG
  # this level is used by the configured loggers (see "event-handlers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  stdout-loglevel = "WARNING"                           # Loglevel for the very basic logger activated during AkkaApplication startup

  event-handler-dispatcher {
    type = "Dispatcher"              # Must be one of the following
    # Dispatcher, (BalancingDispatcher, only valid when all actors using it are of the same type),
    # A FQCN to a class inheriting MessageDispatcherConfigurator with a no-arg visible constructor
    name = "EventHandlerDispatcher"  # Optional, will be a generated UUID if omitted
    keep-alive-time = 60             # Keep alive time for threads
    core-pool-size = 1               # No of core threads
    max-pool-size  = 8               # Max no of threads
    executor-bounds = -1             # Makes the Executor bounded, -1 is unbounded
    task-queue-size = -1             # Specifies the bounded capacity of the task queue (< 1 == unbounded)
    task-queue-type = "linked"       # Specifies which type of task queue will be used, can be "array" or "linked" (default)
    allow-core-timeout = on          # Allow core threads to time out
    rejection-policy = "caller-runs" # abort, caller-runs, discard-oldest, discard
    throughput = 5                   # Throughput for Dispatcher, set to 1 for complete fairness
    throughput-deadline-time = -1    # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
    mailbox-capacity = -1            # If negative (or zero) then an unbounded mailbox is used (default)
    # If positive then a bounded mailbox is used and the capacity is set using the property
    # NOTE: setting a mailbox to 'blocking' can be a bit dangerous, could lead to deadlock, use with care
    # The following are only used for Dispatcher and only if mailbox-capacity > 0
    mailbox-push-timeout-time = 10   # Specifies the timeout to add a new message to a mailbox that is full - negative number means infinite timeout
    #       (in unit defined by the time-unit property)
  }

  # These boot classes are loaded (and created) automatically when the Akka Microkernel boots up
  #     Can be used to bootstrap your application(s)
  #     Should be the FQN (Fully Qualified Name) of the boot class which needs to have a default constructor
  # boot = ["sample.camel.Boot",
  #         "sample.rest.java.Boot",
  #         "sample.rest.scala.Boot",
  #         "sample.security.Boot"]

  boot = [] # b

}